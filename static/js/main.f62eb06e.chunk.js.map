{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","react_default","a","createElement","Fragment","className","src","concat","alt","CardList","_ref","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","console","log","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.f62eb06e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = (props) => {\r\n    const { name, email, id } = props;\r\n\r\n    return (<React.Fragment >\r\n        <div className='bg-light-pink dib br3 pa3 ma2 grow bw2 shadow-5' >\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='Robots' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa2 ba b--pink bg-washed-red'\r\n                type=\"search\"\r\n                placeholder='Search Robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\nreturn (\r\n<div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\r\n    {props.children}\r\n</div>\r\n);\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1 > Ooops.That isn 't good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//this.props.children would render whatever was wrapped around the ErrorBoundry\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\n// import { robots } from './robots';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        console.log();\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n    }\r\n    render() {\r\n        const  {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\r\n        })\r\n\r\n        return !robots.length ? \r\n         <h1 > Loading </h1> :\r\n          (\r\n         < div className = \"tc\" >\r\n                <h1 className = 'f1 ' > RoboFriends </h1> \r\n                <SearchBox searchChange = { this.onSearchChange } /> \r\n                <Scroll >\r\n                    <ErrorBoundry>\r\n                <CardList robots = { filteredRobots }/>\r\n                    </ErrorBoundry>\r\n                 </Scroll> \r\n                 </div>\r\n\r\n\r\n            );\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport { robots } from './robots'\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}